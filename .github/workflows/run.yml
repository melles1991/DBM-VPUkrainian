name: Auto GitHub Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: get_latest
        run: |
          tag=$(git describe --tags --abbrev=0)
          echo "latest=$tag" >> $GITHUB_OUTPUT

      - name: Get version from .toc file
        id: get_version
        run: |
          BASE_VERSION=$(grep -oP '^## Version: \K.*' DBM-VPUkrainian.toc | cut -d '.' -f1,2)
          BUILD_NUMBER=${{ github.run_number }}  # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –Ω–æ–º–µ—Ä –∑–±—ñ—Ä–∫–∏
          FINAL_VERSION="${BASE_VERSION}.${BUILD_NUMBER}"
          
          echo "FINAL_VERSION=$FINAL_VERSION" >> $GITHUB_ENV  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ FINAL_VERSION —É —Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ
          echo "version=$FINAL_VERSION" >> $GITHUB_OUTPUT
          echo "üì¶ –ü–æ—Ç–æ—á–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ TOC: $BASE_VERSION"
          echo "–ë—É–¥—ñ–≤–µ–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä: $BUILD_NUMBER"
          echo "–ù–æ–≤–∞ –≤–µ—Ä—Å—ñ—è (–∑ –Ω–æ–º–µ—Ä–æ–º –∑–±—ñ—Ä–∫–∏): $FINAL_VERSION"

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.get_version.outputs.version }}
          git push origin ${{ steps.get_version.outputs.version }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
